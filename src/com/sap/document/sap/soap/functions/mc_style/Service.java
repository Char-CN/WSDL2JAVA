package com.sap.document.sap.soap.functions.mc_style;

import java.io.File;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.6 2016-04-08T14:38:06.627+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "service", wsdlLocation = "file:/Users/hyy/a.xml", targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style")
public class Service extends javax.xml.ws.Service {

	public static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "service");
	public final static QName Binding = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "binding");
	public final static QName BindingSOAP12 = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "binding_SOAP12");

	static {
		try {
			WSDL_LOCATION = new File(SourceUtil.resource + "wsdl.xml").toURI().toURL();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			WSDL_LOCATION = null;
		}
		// URL url = null;
		// StringBuffer sb = new StringBuffer("");
		// try {
		// InputStream in =
		// Service.class.getClass().getResourceAsStream("/wsdl.xml");
		// Reader f = new InputStreamReader(in);
		// BufferedReader fb = new BufferedReader(f);
		// String s = "";
		// while ((s = fb.readLine()) != null) {
		// sb = sb.append(s);
		// }
		// url = new URL(sb.toString());
		// } catch (Exception e) {
		// e.printStackTrace();
		// }
		// WSDL_LOCATION = url;
	}

	public Service(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public Service() {
		super(WSDL_LOCATION, SERVICE);
	}

	public Service(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public Service(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns ZHRJFPERINTERFACE
	 */
	@WebEndpoint(name = "binding")
	public ZHRJFPERINTERFACE getBinding() {
		return super.getPort(Binding, ZHRJFPERINTERFACE.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns ZHRJFPERINTERFACE
	 */
	@WebEndpoint(name = "binding")
	public ZHRJFPERINTERFACE getBinding(WebServiceFeature... features) {
		return super.getPort(Binding, ZHRJFPERINTERFACE.class, features);
	}

	/**
	 *
	 * @return returns ZHRJFPERINTERFACE
	 */
	@WebEndpoint(name = "binding_SOAP12")
	public ZHRJFPERINTERFACE getBindingSOAP12() {
		return super.getPort(BindingSOAP12, ZHRJFPERINTERFACE.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns ZHRJFPERINTERFACE
	 */
	@WebEndpoint(name = "binding_SOAP12")
	public ZHRJFPERINTERFACE getBindingSOAP12(WebServiceFeature... features) {
		return super.getPort(BindingSOAP12, ZHRJFPERINTERFACE.class, features);
	}

}
